{"version":3,"sources":["components/code/codeCollapse.js","components/2-Basics/Display.js","components/2-Basics/Counter.js","components/code/Code.js","components/2-Basics/BasicsCode.js","components/Basics.js","components/ModernJs.js","components/Overview.js","components/4-GitHubCards/Card.js","components/4-GitHubCards/CardList.js","components/4-GitHubCards/Form.js","components/4-GitHubCards/CardCode.js","components/GitHubCards.js","components/5-StarMatchGame/NumberButton.js","components/5-StarMatchGame/NewGameButton.js","components/5-StarMatchGame/starMatchUtils.js","components/5-StarMatchGame/StarImage.js","components/5-StarMatchGame/useGameState.js","components/5-StarMatchGame/StarMatch.js","components/5-StarMatchGame/StarMatchCode.js","components/StarMatchGame.js","App.js","reportWebVitals.js","index.js"],"names":["i","coll","document","getElementsByClassName","length","addEventListener","this","classList","toggle","content","nextElementSibling","style","display","Display","message","Counter","onClickFunction","increment","onClick","Code","snippets","useState","showCode","setShowCode","console","log","codeOutput","map","snip","className","BasicsCode","Basics","counter","setCounter","incrementCounter","incrVal","ModernJs","href","target","rel","Overview","Card","profile","props","src","avatar_url","alt","name","login","company","bio","repos_url","public_repos","React","Component","CardList","profiles","id","Form","state","username","handleSubmit","event","a","preventDefault","axios","get","catch","error","response","setSate","request","onSubmit","data","setState","type","placeholder","value","onChange","required","CardCode","GitHubCards","addNewProfile","profileData","previousState","NumberButton","numberId","status","isUsed","NewGameButton","text","utils","sum","arr","reduce","acc","curr","range","min","max","Array","from","_","random","Math","floor","randomSumIn","sets","sums","j","len","candidateSet","concat","candidateSum","push","StarImage","count","starId","useGameState","stars","setStars","availableNumbers","setAvailableNumbers","selectedNumbers","setSelectedNumbers","secondsLeft","setSecondsLeft","useEffect","timer","setTimeout","clearTimeout","setGameState","newSelectedNumbers","newAvailableNumbers","filter","n","includes","StarMatch","startNewGame","validSelection","gameStatus","numberStatus","handleNumberClick","StarMatchCode","StarMatchGame","gameId","setGameId","gameInitialized","setGameInitialized","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.004bbcfe.chunk.js","sourcesContent":["let coll = document.getElementsByClassName(\"collapsible\");\r\nlet i;\r\n\r\nfor (i = 0; i < coll.length; i++) {\r\n  coll[i].addEventListener(\"click\", function() {\r\n    this.classList.toggle(\"active\");\r\n    let content = this.nextElementSibling;\r\n    if (content.style.display === \"block\") {\r\n      content.style.display = \"none\";\r\n    } else {\r\n      content.style.display = \"block\";\r\n    }\r\n  });\r\n}","import React from \"react\";\r\n\r\nfunction Display({message}) {\r\n    return (<div>Value: {message}</div>);\r\n}\r\n\r\nexport default Display;","import React from \"react\";\r\n\r\n// function logRandom() {\r\n//     console.log(Math.random());\r\n// }\r\n\r\nexport default function Counter({onClickFunction, increment}){\r\n\r\n    //const [counter, setCounter] = useState(0);\r\n    //const clickHandler = () => setCounter(counter + 1);\r\n\r\n    //return (<button onClick={() => setCounter(counter + 1)}>Value: {counter}</button>);\r\n\r\n    //best to use click handler instead of inline arrow\r\n    const clickHandler = () => onClickFunction(increment);\r\n\r\n    return (<button onClick={clickHandler}>Click me +{increment}</button>);\r\n\r\n}","import React, { useState } from \"react\";\r\nimport \"../code/codeCollapse.js\"\r\nimport \"../code/Code.css\"\r\n\r\nconst Code = ({snippets}) => {\r\n\r\n    const [showCode, setShowCode] = useState(\"code-content-hidden\")\r\n    const handleShowCode = () => {\r\n        if(showCode === \"code-content\"){\r\n            setShowCode(\"code-content-hidden\")\r\n        } else {\r\n            setShowCode(\"code-content\")\r\n        }\r\n    }\r\n\r\n    console.log(snippets);\r\n\r\n    const codeOutput = snippets.map(snip => <pre><code>{snip}</code></pre>)\r\n\r\n    return(<>\r\n     <button className=\"code-collapse-button\" onClick={handleShowCode}>See Code</button>\r\n      <div className={showCode}>\r\n          {codeOutput}\r\n        </div> \r\n    </>);\r\n};\r\n\r\nexport default Code;","import React from \"react\";\r\nimport Code from \"../code/Code.js\";\r\n\r\nconst BasicsCode = () => {\r\n\r\n    const counter = `// Counter.js\r\n    export default function Counter({onClickFunction, increment}){\r\nconst clickHandler = () => onClickFunction(increment);\r\n\r\nreturn (<button onClick={clickHandler}>Click me +{increment}</button>);\r\n}`;\r\n    const display = `// Display.js\r\n    function Display({message}) {\r\n        return (<div>Value: {message}</div>);\r\n    }\r\n    export default Display;`;\r\n    const basics = `// Basics.js --- PARENT\r\n    const [counter, setCounter] = useState(0);\r\n    const incrementCounter = (incrVal) => setCounter(counter + incrVal);}\r\n   \r\n    // ...\r\n   \r\n    <Counter onClickFunction={incrementCounter} increment={1} />\r\n         <Counter onClickFunction={incrementCounter} increment={2} />\r\n         <Display message={counter} />`;\r\n\r\n    const snippets =[counter,display,basics];\r\n\r\n    return(<Code snippets={snippets} />);\r\n};\r\n\r\nexport default BasicsCode;","import React, { useState } from \"react\";\r\nimport Display from \"./2-Basics/Display.js\";\r\nimport Counter from \"./2-Basics/Counter.js\";\r\nimport BasicsCode from \"./2-Basics/BasicsCode.js\";\r\n\r\nexport default function Basics() {\r\n\r\n  const [counter, setCounter] = useState(0);\r\n  const incrementCounter = (incrVal) => setCounter(counter + incrVal);\r\n\r\n  return (<>\r\n    <div className=\"course-section\">\r\n      <h3>2. Basics</h3>\r\n\r\n      <Counter onClickFunction={incrementCounter} increment={1} />\r\n      <Counter onClickFunction={incrementCounter} increment={2} />\r\n      <Display message={counter} />\r\n      <BasicsCode />\r\n        </div>\r\n  </>);\r\n}","import React from \"react\";\r\n\r\nexport default function ModernJs(){    \r\n\r\n  return (<>\r\n  <div className=\"course-section\">\r\n      <h3>3. ModernJs</h3>\r\n      <p>see jupyter notebook for this section as it is mostly theory</p>\r\n      <a href=\"https://github.com/OwenSteele/JupyterNotebooks/blob/master/React/React%20Getting%20Started.ipynb\"\r\n       target=\"_blank\" rel=\"noopener noreferrer\">See notebook</a>\r\n    </div>\r\n  </>);\r\n}","\r\nexport default function Overview(){    \r\n\r\n  return (<>\r\n  <div className=\"course-section\">\r\n      <h3>1. Overview</h3>\r\n      <p>Course write-along basic practice - pluralsight course by Samer Buna (React: getting started)</p>\r\n      <p>part of <strong>'react-practice'</strong> repo</p>      \r\n    </div>\r\n  </>);\r\n}","import React from \"react\";\r\nimport \"./Card.css\"\r\n\r\nclass Card extends React.Component {    \r\n    render() {\r\n    const profile = this.props;\r\n        return (\r\n        <div className=\"github-profile\">\r\n            <img src={profile.avatar_url} className=\"placeholder-img\" alt=\"\"/>\r\n            <div className=\"info\">\r\n                <div className=\"name\">{profile.name} ({profile.login})</div>\r\n                <div className=\"company\">{profile.company}</div>\r\n                <div className=\"bio\">{profile.bio}</div>\r\n                <a href={profile.repos_url} className=\"repos\">Public Repos: {profile.public_repos}</a>\r\n            </div>\r\n      </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport Card from \"./Card.js\";\r\n\r\nconst CardList = (props) => {\r\n    return (<div>\r\n        {props.profiles.map(profile => <Card key={profile.id} {...profile} />)}\r\n    </div>);\r\n}\r\n\r\nexport default CardList;","import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nclass Form extends React.Component {   \r\n    \r\n    state = {username: '', message: ''};\r\n\r\n    handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const response = await (\r\n            await axios.get(`https://api.github.com/users/${this.state.username}`)\r\n        .catch(function (error){\r\n            if(error.response){\r\n                this.setSate({message: 'Username was not found.'});\r\n                console.log(this.state.message);\r\n            }\r\n            else if(error.request){\r\n                this.setSate({message: 'GitHub could not be reach at this time.'});\r\n                console.log(this.state.message);\r\n            }\r\n        }));\r\n\r\n        this.props.onSubmit(response.data);\r\n        this.setState({username: ''});\r\n    };\r\n\r\n    render() {\r\n        return (<>\r\n            <div id=\"message\">{this.state.message}</div>\r\n        <form onSubmit={this.handleSubmit}>\r\n            <input type=\"text\" placeholder=\"GitHub Username\" \r\n            value={this.state.username} \r\n            onChange={event => this.setState({ username: event.target.value})} \r\n            required/>\r\n            <button type=\"submit\">Add User Card</button>\r\n        </form>\r\n        </>\r\n      );\r\n    }\r\n}\r\n\r\nexport default Form;","import React from \"react\";\r\nimport Code from \"../code/Code.js\";\r\n\r\nconst CardCode = () => {\r\n\r\n    const card = `// Card.js\r\n\r\n    class Card extends React.Component {    \r\n        render() {\r\n        const profile = this.props;\r\n            return (\r\n            <div className=\"github-profile\">\r\n                <img src={profile.avatar_url} className=\"placeholder-img\" alt=\"\"/>\r\n                <div className=\"info\">\r\n                    <div className=\"name\">{profile.name} ({profile.login})</div>\r\n                    <div className=\"company\">{profile.company}</div>\r\n                    <div className=\"bio\">{profile.bio}</div>\r\n                    <a href={profile.repos_url} className=\"repos\">Public Repos: {profile.public_repos}</a>\r\n                </div>\r\n          </div>\r\n          );\r\n        }\r\n    }`;\r\n    const cardList = `// CardList.js\r\n    const CardList = (props) => {\r\n        return (<div>\r\n            {props.profiles.map(profile => <Card key={profile.id} {...profile} />)}\r\n        </div>);`;\r\n    const form = `// Form.js\r\n\r\n    class Form extends React.Component {   \r\n    \r\n    state = {username: '', message: ''};\r\n\r\n    handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const response = await (\r\n            await axios.get('https://api.github.com/users/$ {this.state.username}')\r\n        .catch(function (error){\r\n            if(error.response){\r\n                this.setSate({message: 'Username was not found.'});\r\n                console.log(this.state.message);\r\n            }\r\n            else if(error.request){\r\n                this.setSate({message: 'GitHub could not be reach at this time.'});\r\n                console.log(this.state.message);\r\n            }\r\n        }));\r\n\r\n        this.props.onSubmit(response.data);\r\n        this.setState({username: ''});\r\n    };\r\n\r\n    render() {\r\n        return (<>\r\n            <div id=\"message\">{this.state.message}</div>\r\n        <form onSubmit={this.handleSubmit}>\r\n            <input type=\"text\" placeholder=\"GitHub Username\" \r\n            value={this.state.username} \r\n            onChange={event => this.setState({ username: event.target.value})} \r\n            required/>\r\n            <button type=\"submit\">Add User Card</button>\r\n        </form>\r\n        </>\r\n      );\r\n    }\r\n}`;\r\n    const githubCards = `// GitHubCards.js --- PARENT\r\n\r\n    import CardList from \"./4-GitHubCards/CardList.js\";\r\n    import Form from \"./4-GitHubCards/Form.js\";\r\n    \r\n    class GitHubCards extends React.Component {    \r\n    \r\n        state = {\r\n            profiles: []\r\n        };\r\n    \r\n        addNewProfile = (profileData) => {\r\n            console.log(profileData);\r\n            this.setState(previousState => ({\r\n                profiles: [...previousState.profiles, profileData]\r\n            }));\r\n        };\r\n    \r\n        render() {\r\n            return (<div className=\"course-section\">\r\n            <h3>4. GitHub Card App</h3>\r\n            <p>Built using class components</p>\r\n            <Form onSubmit={this.addNewProfile}/>\r\n            <CardList profiles={this.state.profiles}/>\r\n            </div>);\r\n        };\r\n    }`;\r\n\r\n    const snippets =[card,cardList,form,githubCards];\r\n\r\n    return(<Code snippets={snippets} />);\r\n};\r\n\r\nexport default CardCode;","import React from \"react\";\r\nimport CardList from \"./4-GitHubCards/CardList.js\";\r\nimport Form from \"./4-GitHubCards/Form.js\";\r\nimport CardCode from \"./4-GitHubCards/CardCode.js\";\r\n\r\nclass GitHubCards extends React.Component {    \r\n\r\n    state = {\r\n        profiles: []\r\n    };\r\n\r\n    addNewProfile = (profileData) => {\r\n        console.log(profileData);\r\n        this.setState(previousState => ({\r\n            profiles: [...previousState.profiles, profileData]\r\n        }));\r\n    };\r\n\r\n    render() {\r\n        return (<div className=\"course-section\">\r\n        <h3>4. GitHub Card App</h3>\r\n        <p>Built using class components</p>\r\n        <Form onSubmit={this.addNewProfile}/>\r\n        <CardList profiles={this.state.profiles}/>\r\n        <CardCode />\r\n        </div>);\r\n    };\r\n}\r\n\r\nexport default GitHubCards;","import React from \"react\";\r\nimport \"./StarMatch.css\";\r\nimport \"./NumberButton.css\"\r\n\r\nconst NumberButton = ({numberId,status,onClick}) => {\r\n    const isUsed = status !== 'used';\r\n    return (<button key={numberId} className={`number ${status} btn` }\r\n    onClick={() => isUsed ? onClick(numberId) : null} >{numberId}</button>);\r\n};\r\n\r\nexport default NumberButton;","import React from \"react\";\r\n\r\nconst NewGameButton = ({text, onClick}) => {\r\n    return (<div>\r\n        <p></p>\r\n        <button key={text} onClick={onClick}>{text}</button>\r\n        </div>);\r\n};\r\n\r\nexport default NewGameButton;","\r\nconst utils = {\r\n    sum: arr => arr.reduce((acc, curr) => acc + curr, 0),\r\n  \r\n    range: (min, max) => Array.from({ length: max - min + 1 }, (_, i) => min + i),\r\n  \r\n    random: (min, max) => min + Math.floor(Math.random() * (max - min + 1)),\r\n  \r\n    randomSumIn: (arr, max) => {\r\n      const sets = [[]];\r\n      const sums = [];\r\n      for (let i = 0; i < arr.length; i++) {\r\n        for (let j = 0, len = sets.length; j < len; j++) {\r\n          const candidateSet = sets[j].concat(arr[i]);\r\n          const candidateSum = utils.sum(candidateSet);\r\n          if (candidateSum <= max) {\r\n            sets.push(candidateSet);\r\n            sums.push(candidateSum);\r\n          }\r\n        }\r\n      }\r\n      return sums[utils.random(0, sums.length - 1)];\r\n    },\r\n  };\r\n\r\nexport default utils;","import React from \"react\";\r\nimport \"./StarMatch.css\";\r\nimport utils from \"./starMatchUtils.js\";\r\n\r\nconst StarImage = ({count}) => {\r\n return (<>\r\n{utils.range(1, count).map(starId => \r\n <div key={starId} className=\"star\"></div>)}\r\n </>);\r\n};\r\n\r\nexport default StarImage;","import { useState, useEffect } from \"react\";\r\nimport \"./StarMatch.css\";\r\nimport utils from \"./starMatchUtils.js\";\r\n\r\nconst useGameState = () => {\r\n    const [stars, setStars] = useState(utils.random(1, 9));\r\n    const [availableNumbers, setAvailableNumbers] = useState(utils.range(1, 9));\r\n    const [selectedNumbers, setSelectedNumbers] = useState([]);\r\n    const [secondsLeft, setSecondsLeft] = useState(10);\r\n\r\n    useEffect(() => {\r\n      if (secondsLeft > 0 && availableNumbers.length > 0) {\r\n        const timer = setTimeout(() => {\r\n          setSecondsLeft(secondsLeft - 1);\r\n        }, 1000);\r\n        return () => clearTimeout(timer);\r\n      }\r\n    });\r\n\r\n    const setGameState = (newSelectedNumbers) => {\r\n      if (utils.sum(newSelectedNumbers) === stars) {\r\n\r\n        const newAvailableNumbers = availableNumbers.filter(n =>\r\n          !newSelectedNumbers.includes(n));\r\n\r\n        setAvailableNumbers(newAvailableNumbers);\r\n        setStars(utils.random(1, 9));\r\n\r\n        setSelectedNumbers([]);\r\n      } else {\r\n        setSelectedNumbers(newSelectedNumbers);\r\n      }\r\n    }\r\n\r\n    return {stars, availableNumbers, selectedNumbers, secondsLeft, setGameState}\r\n  }\r\n\r\nexport default useGameState;","import React from \"react\";\r\nimport \"./StarMatch.css\";\r\nimport NumberButton from \"./NumberButton.js\";\r\nimport NewGameButton from \"./NewGameButton.js\";\r\nimport StarImage from \"./StarImage.js\";\r\nimport utils from \"./starMatchUtils.js\";\r\nimport useGameState from \"./useGameState.js\";\r\n\r\nconst StarMatch = ({ startNewGame }) => {\r\n\r\n  const  {stars, availableNumbers, selectedNumbers, secondsLeft, setGameState}\r\n  = useGameState();\r\n\r\n  const validSelection = utils.sum(selectedNumbers) <= stars;\r\n  const gameStatus = availableNumbers.length === 0\r\n    ? \"won\"\r\n    : secondsLeft === 0 ? \"lost\" : \"active\";\r\n\r\n  const numberStatus = (numberId) => {\r\n    if (!availableNumbers.includes(numberId)\r\n      || gameStatus !== \"active\") {\r\n      return 'used';\r\n    }\r\n    if (selectedNumbers.includes(numberId)) {\r\n      return validSelection ? 'valid' : \"invalid\";\r\n    }\r\n    return 'available';\r\n  }\r\n\r\n  const handleNumberClick = (numberId) => {\r\n\r\n    const newSelectedNumbers = selectedNumbers.includes(numberId)\r\n      ? selectedNumbers.filter(n => n !== numberId)\r\n      : selectedNumbers.concat(numberId);\r\n\r\n      setGameState(newSelectedNumbers);\r\n  }\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      <div className=\"body\">\r\n        <div className=\"left\">\r\n          {gameStatus !== \"active\"\r\n            ? <NewGameButton onClick={startNewGame} text={`You ${gameStatus}, New Game`} />\r\n            : <StarImage count={stars} />}\r\n        </div>\r\n        <div className=\"right\">\r\n          {utils.range(1, 9).map(numberId =>\r\n            <NumberButton\r\n              key={numberId}\r\n              numberId={numberId}\r\n              status={numberStatus(numberId)}\r\n              onClick={handleNumberClick} />)}\r\n        </div>\r\n      </div>\r\n      <div className=\"timer\">Time Remaining: {secondsLeft}</div>\r\n      <NewGameButton onClick={startNewGame} text=\"Start Again?\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StarMatch;","import React from \"react\";\r\nimport Code from \"../code/Code.js\";\r\n\r\nconst StarMatchCode = () => {\r\n\r\n    const newGameButton = `// NewGameButton.js\r\n    \r\n    const NewGameButton = ({text, onClick}) => {\r\n        return (<div>\r\n            <p></p>\r\n            <button key={text} onClick={onClick}>{text}</button>\r\n            </div>);\r\n    };`;\r\n    const numberButton = `// NumberButton.js\r\n    \r\n    const NumberButton = ({numberId,status,onClick}) => {\r\n        const isUsed = status !== 'used';\r\n        return (<button key={numberId} className={'number $ {status} btn' }\r\n        onClick={() => isUsed ? onClick(numberId) : null} >{numberId}</button>);\r\n    };`;\r\n    const numberButtonCss = `// NumberButtonCss.css\r\n    \r\n    .available {\r\n        transition: .5s; \r\n    }\r\n    .used {\r\n        opacity: 0.3;\r\n        transition: 2s;\r\n    }\r\n    .used:hover {\r\n        text-decoration: none;\r\n    }\r\n    .valid {\r\n        background-color: #4ec200;\r\n        color: #ffffff;\r\n        transition: .5s;    \r\n    }\r\n    .invalid {\r\n        background-color: #ff0022;\r\n        color: #ffffff;\r\n        transition: .5s;  \r\n    }    \r\n    .btn {\r\n        border-radius: 5px;\r\n        transition: .7s;\r\n    }\r\n    .btn:hover {\r\n        color: #ffae00;\r\n        font-weight: bolder;\r\n        transition: .3s;\r\n    }`;\r\n    const starImage = `// StarImage.js\r\n    \r\n    const StarImage = ({count}) => {\r\n        return (<>\r\n       {utils.range(1, count).map(starId => \r\n        <div key={starId} className=\"star\"></div>)}\r\n        </>);\r\n       };`;\r\n    const starMatchUtils = `// starMatchUtils.js\r\n    \r\n    const utils = {\r\n        sum: arr => arr.reduce((acc, curr) => acc + curr, 0),\r\n      \r\n        range: (min, max) => Array.from({ length: max - min + 1 }, (_, i) => min + i),\r\n      \r\n        random: (min, max) => min + Math.floor(Math.random() * (max - min + 1)),\r\n      \r\n        randomSumIn: (arr, max) => {\r\n          const sets = [[]];\r\n          const sums = [];\r\n          for (let i = 0; i < arr.length; i++) {\r\n            for (let j = 0, len = sets.length; j < len; j++) {\r\n              const candidateSet = sets[j].concat(arr[i]);\r\n              const candidateSum = utils.sum(candidateSet);\r\n              if (candidateSum <= max) {\r\n                sets.push(candidateSet);\r\n                sums.push(candidateSum);\r\n              }\r\n            }\r\n          }\r\n          return sums[utils.random(0, sums.length - 1)];\r\n        },\r\n      };`;\r\n    const starMatch = `// StarMatch.js \r\n    \r\n    import \"./StarMatch.css\";\r\nimport NumberButton from \"./NumberButton.js\";\r\nimport NewGameButton from \"./NewGameButton.js\";\r\nimport StarImage from \"./StarImage.js\";\r\nimport utils from \"./starMatchUtils.js\";\r\nimport useGameState from \"./useGameState.js\";\r\n\r\nconst StarMatch = ({ startNewGame }) => {\r\n\r\n  const  {stars, availableNumbers, selectedNumbers, secondsLeft, setGameState}\r\n  = useGameState();\r\n\r\n  const validSelection = utils.sum(selectedNumbers) <= stars;\r\n  const gameStatus = availableNumbers.length === 0\r\n    ? \"won\"\r\n    : secondsLeft === 0 ? \"lost\" : \"active\";\r\n\r\n  const numberStatus = (numberId) => {\r\n    if (!availableNumbers.includes(numberId)\r\n      || gameStatus !== \"active\") {\r\n      return 'used';\r\n    }\r\n    if (selectedNumbers.includes(numberId)) {\r\n      return validSelection ? 'valid' : \"invalid\";\r\n    }\r\n    return 'available';\r\n  }\r\n\r\n  const handleNumberClick = (numberId) => {\r\n\r\n    const newSelectedNumbers = selectedNumbers.includes(numberId)\r\n      ? selectedNumbers.filter(n => n !== numberId)\r\n      : selectedNumbers.concat(numberId);\r\n\r\n      setGameState(newSelectedNumbers);\r\n  }\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      <div className=\"body\">\r\n        <div className=\"left\">\r\n          {gameStatus !== \"active\"\r\n            ? <NewGameButton onClick={startNewGame} text={'You $ {gameStatus}, New Game'} />\r\n            : <StarImage count={stars} />}\r\n        </div>\r\n        <div className=\"right\">\r\n          {utils.range(1, 9).map(numberId =>\r\n            <NumberButton\r\n              key={numberId}\r\n              numberId={numberId}\r\n              status={numberStatus(numberId)}\r\n              onClick={handleNumberClick} />)}\r\n        </div>\r\n      </div>\r\n      <div className=\"timer\">Time Remaining: {secondsLeft}</div>\r\n      <NewGameButton onClick={startNewGame} text=\"Start Again?\" />\r\n    </div>\r\n  );\r\n};`;\r\n    const useGameState = `// useGameState.js\r\n    const useGameState = () => {\r\n      const [stars, setStars] = useState(utils.random(1, 9));\r\n      const [availableNumbers, setAvailableNumbers] = useState(utils.range(1, 9));\r\n      const [selectedNumbers, setSelectedNumbers] = useState([]);\r\n      const [secondsLeft, setSecondsLeft] = useState(10);\r\n  \r\n      useEffect(() => {\r\n        if (secondsLeft > 0 && availableNumbers.length > 0) {\r\n          const timer = setTimeout(() => {\r\n            setSecondsLeft(secondsLeft - 1);\r\n          }, 1000);\r\n          return () => clearTimeout(timer);\r\n        }\r\n      });\r\n  \r\n      const setGameState = (newSelectedNumbers) => {\r\n        if (utils.sum(newSelectedNumbers) === stars) {\r\n  \r\n          const newAvailableNumbers = availableNumbers.filter(n =>\r\n            !newSelectedNumbers.includes(n));\r\n  \r\n          setAvailableNumbers(newAvailableNumbers);\r\n          setStars(utils.random(1, 9));\r\n  \r\n          setSelectedNumbers([]);\r\n        } else {\r\n          setSelectedNumbers(newSelectedNumbers);\r\n        }\r\n      }\r\n  \r\n      return {stars, availableNumbers, selectedNumbers, secondsLeft, setGameState}\r\n    }\r\n    `;\r\n\r\n    const snippets =\r\n    [newGameButton,numberButton,numberButtonCss,\r\n      starImage,starMatchUtils,starMatch,useGameState];\r\n\r\n    return(<Code snippets={snippets} />);\r\n};\r\n\r\nexport default StarMatchCode;","import React, { useState} from \"react\";\r\nimport StarMatch from \"./5-StarMatchGame/StarMatch.js\";\r\nimport StarMatchCode from \"./5-StarMatchGame/StarMatchCode.js\";\r\n\r\nconst StarMatchGame = () => {\r\n\r\n    const [gameId, setGameId] = useState(1);\r\n    const [gameInitialized, setGameInitialized] = useState(false);\r\n\r\n    const handleStartClick = () => {\r\n        setGameInitialized(true);\r\n    };\r\n\r\n    return (\r\n        <div className=\"course-section\">\r\n            <h3>5. Star Match Game</h3>\r\n            <p>Game for match number of stars with </p>\r\n          <div className=\"help\">\r\n            Pick 1 or more numbers that sum to the number of stars\r\n          </div>\r\n          <div>\r\n            {gameInitialized \r\n            ? <StarMatch key={gameId} startNewGame={() => setGameId(gameId+1)}/>\r\n            : <button className=\"startGameButton\" onClick={handleStartClick}>Start Game</button>}\r\n</div>\r\n            <StarMatchCode />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StarMatchGame;","import './App.css';\r\nimport Basics from \"./components/Basics.js\";\r\nimport ModernJs from \"./components/ModernJs.js\";\r\nimport Overview from \"./components/Overview.js\";\r\nimport GitHubCards from \"./components/GitHubCards.js\";\r\nimport StarMatchGame from \"./components/StarMatchGame.js\";\r\nimport React from \"react\";\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <div>\r\n          <img className=\"me-image\" src=\"https://owensteele.co.uk/pictures/me2.PNG\" alt=\"Me\"/>\r\n          <h1>Owen's React Practice</h1>\r\n          <a href=\"https://github.com/OwenSteele/react-practice/tree/master/ps-react-getting-started\"\r\n          target=\"_blank\" rel=\"noopener noreferrer\"><div id=\"gh-repo\"></div></a>\r\n        </div>\r\n        \r\n      </header>\r\n      <div className=\"App-body\">\r\n        <Overview />\r\n        <Basics />\r\n        <ModernJs />\r\n        <GitHubCards />\r\n        <StarMatchGame />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}